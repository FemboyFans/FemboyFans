x-environment: &common-env
  FEMBOYFANS_HOSTNAME: http://localhost:${EXPOSED_SERVER_PORT:-4000}
  FEMBOYFANS_REDIS_URL: redis://redis
  FEMBOYFANS_ELASTICSEARCH_HOST: elasticsearch
  FEMBOYFANS_MEMCACHED_SERVERS: memcached
  FEMBOYFANS_IQDB_SERVER: http://iqdb:5588
  FEMBOYFANS_RECOMMENDER_SERVER: http://recommender:5000
  # Must be externally accessible
  FEMBOYFANS_REPORTS_SERVER: http://localhost:${EXPOSED_SERVER_PORT:-4000}/reports
  # Must be internally accessible
  FEMBOYFANS_REPORTS_SERVER_INTERNAL: http://reports:3000
  FEMBOYFANS_CLICKHOUSE_URL: http://clickhouse:8123
  FEMBOYFANS_REPORTS_ENABLED: 1
  FEMBOYFANS_DISCORD_SITE: http://localhost:4002
  FEMBOYFANS_DISCORD_SECRET: super_secret_for_url_discord
  FEMBOYFANS_REPORT_KEY: super_secret_key_for_reports_signature
  # These are just development secrets, do not use them in production
  FEMBOYFANS_PROTECTED_FILE_SECRET: 6686a6413d90c43d5e82403ef271ec25d13cc24e3bfcdd094e73d1eff22a3567
  FEMBOYFANS_REPLACEMENT_FILE_SECRET: b35bc54cdc0d0436fc5867c7ef88f9b10a37ae20a06b37e67614fe60019d7bb1
  SECRET_TOKEN: 1c58518a891eff4520cadc59afa9e378a9325f1247544ff258096e497f095f45
  SESSION_SECRET_KEY: 44b4f44e9f253c406cbe727d403d500c1cecff943e4d2aea8f5447f28846fffe
  # Hide annoying output from libvips on corrupt files
  VIPS_WARNING: "0"
  EXPOSED_WEBPACKER_PORT: ${EXPOSED_WEBPACKER_PORT:-4003}

x-depends-on: &common-depends-on
  elasticsearch:
    condition: service_healthy
  memcached:
    condition: service_healthy
  postgres:
    condition: service_healthy
  redis:
    condition: service_healthy

services:
  femboyfans:
    build:
      context: .
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    user: ${DOCKER_USER:-root}
    image: femboyfans
    healthcheck:
      # this healthcheck is only for the rails app, sidekiq needs to be separated to be healthchecked
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:9000/up || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - post_data:/app/public/data
      - ./docker/cron_tasks/daily:/etc/periodic/daily
      - ./docker/cron_tasks/hourly:/etc/periodic/hourly
    environment:
      <<: *common-env
      RAILS_ENV: development
      DB_USER: femboyfans
      DB_NAME: femboyfans_development
    ports:
      - "${EXPOSED_WEBPACKER_PORT:-4003}:${EXPOSED_WEBPACKER_PORT:-4003}"
    depends_on:
      <<: *common-depends-on
      autocompleted:
        condition: service_healthy
      iqdb:
        condition: service_healthy
      recommender:
        condition: service_healthy
      redis:
        condition: service_healthy
      reports:
        condition: service_healthy
    tty: true
    init: true

  # For this service to work properly, it must be accessible from /tags/autocomplete.json on the same url as the primary app
  autocompleted:
    image: ghcr.io/femboyfans/autocompleted:413faed9e0371d14e350c8131f1300f1687f951a
    command: /app/autocompleted
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://$$SERVER_ADDR/up || exit 1
      interval: 30s
      timeout: 2s
      retries: 5
    environment:
      SERVER_ADDR: autocompleted:8118
      PG__USER: femboyfans
      PG__HOST: postgres
      PG__PORT: 5432
      PG__DBNAME: femboyfans_development
      PG__POOL__MAX_SIZE: 1

  nginx:
    image: nginx:1.28.0-alpine3.21
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:$$NGINX_PORT/online || exit 1
      interval: 15s
      timeout: 2s
      retries: 5
    volumes:
      - ./public:/app/public
      - post_data:/app/public/data
      - ./docker/default.conf.template:/etc/nginx/templates/default.conf.template
    environment:
      <<: *common-env
      NGINX_PORT: ${EXPOSED_NGINX_PORT:-4000}
    depends_on:
      autocompleted:
        condition: service_healthy
      femboyfans:
        condition: service_healthy
      reports:
        condition: service_healthy
    ports:
      - "${EXPOSED_SERVER_PORT:-4000}:${EXPOSED_SERVER_PORT:-4000}"

  postgres:
    image: postgres:17.5-alpine3.20
    environment:
      - POSTGRES_USER=femboyfans
      - POSTGRES_DB=femboyfans_development
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U femboyfans -d postgres
      interval: 20s
      timeout: 2s
      retries: 10
    ports:
      - "${EXPOSED_POSTGRES_PORT:-34518}:5432"

  clickhouse:
    image: clickhouse/clickhouse-server:24.8.2.3-alpine
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:8123/ping || exit 1
      interval: 15s
      timeout: 2s
      retries: 5
    cap_add:
      - NET_ADMIN
      - IPC_LOCK
      - SYS_NICE
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "${EXPOSED_CLICKHOUSE_PORT:-34520}:8123"

  redis:
    image: redis:8.0.1-alpine3.21
    command: redis-server --save 10 1 --loglevel warning
    healthcheck:
      test: redis-cli ping
      interval: 15s
      timeout: 2s
      retries: 5
    volumes:
      - redis_data:/data
    ports:
      - "${EXPOSED_REDIS_PORT:-34519}:6379"

  memcached:
    image: memcached:1.6.38-alpine
    healthcheck:
      test: echo "version" | nc -vn -w 1 127.0.0.1 11211
      interval: 30s
      timeout: 2s
      retries: 5

  elasticsearch:
    image: elasticsearch:9.0.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - logger.level=WARN
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - TINI_SUBREAPER=true
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    init: true
    healthcheck:
      test: curl "elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=2s"
      interval: 30s
      timeout: 2s
      retries: 12
    ports:
      - "${EXPOSED_ELASTICSEARCH_PORT:-49200}:9200"

  iqdb:
    image: ghcr.io/e621ng/iqdb:ad5e363879d4e4b80a0821253ae610b7859c5d32
    command: iqdb http 0.0.0.0 5588 /iqdb/iqdb.db
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:5588/status || exit 1
      interval: 30s
      timeout: 2s
      retries: 5
    volumes:
      - iqdb_data:/iqdb

  recommender:
    image: ghcr.io/femboyfans/recommender:b29409d748333c99beb1faf2dc7b902cefdf26cf
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:5000/metrics || exit 1
      interval: 30s
      timeout: 2s
      retries: 5
    volumes:
      - recommender_data:/recommender/data
    environment:
      - DATABASE_URL=postgres://femboyfans:@postgres/femboyfans_development
      - OPENBLAS_NUM_THREADS=1
      - TRAINING_THREADS=4

  # By default, this is bound to /reports on the same url as the primary app for external access
  # To change this, set the FEMBOYFANS_REPORTS_SERVER env variable
  # For internal access, change the FEMBOYFANS_REPORTS_SERVER_INTERNAL env varable (defaults to http://reports:3000)
  reports:
    image: ghcr.io/femboyfans/reports:49b1c03947327bc22eb6cd8e077064139abca801
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:3000/up || exit 1
      interval: 30s
      timeout: 2s
      retries: 5
    environment:
      - CLICKHOUSE_URL=http://clickhouse:8123
      - REDIS_URL=redis://redis/1
      - SECRET_KEY=${FEMBOYFANS_REPORT_KEY:-super_secret_key_for_reports_signature}
    ports:
      - "${EXPOSED_REPORTS_PORT:-4001}:3000"
    depends_on:
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Discord integration

  discordbot:
    image: ghcr.io/femboyfans/discordbot:8b12e4861d6da64e70ec482b41001fddca8a1a18
    environment:
      DISCORD_TOKEN: ${DISCORDBOT_DISCORD_TOKEN-}
      DISCORD_ID: ${DISCORDBOT_DISCORD_ID-}
      DISCORD_SECRET: ${DISCORDBOT_DISCORD_SECRET-}
      REDIS_URL: ${DISCORDBOT_REDIS_URL:-redis://redis/2}
      REDIS_CHANNELS_TICKETS: ${DISCORDBOT_CHANNELS_TICKETS:-ticket_updates}
      GUILD_ID: ${DISCORDBOT_GUILD_ID-}
      ADMIN_ROLE: ${DISCORDBOT_ADMIN_ROLE-}
      JOINER_PORT: ${JOINER_PORT:-4002}
      JOINER_URL: ${DISCORDBOT_JOINER_URL:-http://localhost:${EXPOSED_JOINER_PORT:-4002}}
      JOINER_SECRET: ${FEMBOYFANS_DISCORD_SECRET:-super_secret_for_url_discord}
      JOINER_CHANNEL_ID: ${DISCORDBOT_JOINER_CHANNEL_ID-}
      AUDIT_LOG_CHANNEL_ID: ${DISCORDBOT_AUDIT_LOG_CHANNEL_ID-}
      EVENT_CHANNEL_ID: ${DISCORDBOT_EVENT_CHANNEL_ID-}
      TICKET_CHANNEL_ID: ${DISCORDBOT_TICKET_CHANNEL_ID-}
      MEMBER_ROLE_ID: ${DISCORDBOT_MEMBER_ROLE_ID-}
      BASE_URL: ${DISCORDBOT_BASE_URL:-http://localhost:${EXPOSED_SERVER_PORT:-4000}}
      FETCH_URL: ${DISCORDBOT_FETCH_URL:-http://nginx:${EXPOSED_SERVER_PORT:-4000}}
      CDN_HOST: ${DISCORDBOT_CDN_HOST:-localhost:${EXPOSED_SERVER_PORT:-4000}}
      BLACKLISTED_TAGS: ${DISCORDBOT_BLACKLISTED_TAGS:-}
      STAFF_CATEGORIES: ${DISCORDBOT_STAFF_CATEGORIES:-}
      SAFE_CHANNELS: ${DISCORDBOT_SAFE_CHANNELS:-}
      ENCRYPTION_KEY: ${DISCORDBOT_ENCRYPTION_KEY:-o7SrC4IZKDeX4WOC4Zulp2xhQxNM1tvkHmi4Wh8AEqbjdCR3vFQplQCPE6FlnisLCLbs3Axeg0B96hYr}
      ENCRYPTION_SALT: ${DISCORDBOT_ENCRYPTION_SALT:-apPyQsjNgUOIiAV62Evly0qgJATdocWwKT0vsdow}
    init: true
    ports:
      - "${EXPOSED_JOINER_PORT:-${JOINER_PORT-}}:${JOINER_PORT:-4002}"
    profiles:
      - discord

  # Useful for development

  tests:
    image: femboyfans
    environment:
      <<: *common-env
      RAILS_ENV: test
    volumes:
      - .:/app
      - ./docker/local_config.rb:/app/config/local_config.rb
      - node_modules:/app/node_modules
    depends_on:
      <<: *common-depends-on
    entrypoint: bundle exec rails test
    profiles:
      - tests

  dtext:
    build:
      context: lib/dtext_rb
    image: dtext
    profiles:
      - tests

  rubocop:
    image: femboyfans
    volumes:
      - .:/app
      - rubocop_cache:/rubocop_cache
    entrypoint: bundle exec rubocop --cache-root /rubocop_cache
    profiles:
      - rubocop

  linter:
    image: femboyfans
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    entrypoint: yarn run lint
    profiles:
      - linter

volumes:
  post_data:
  iqdb_data:
  elasticsearch_data:
  db_data:
  redis_data:
  node_modules:
  rubocop_cache:
  recommender_data:
  clickhouse_data:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
    driver_opts:
      com.docker.network.bridge.name: br-femboyfans
