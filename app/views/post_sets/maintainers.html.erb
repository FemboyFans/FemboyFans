<% @maintainers = @post_set.post_set_maintainers %>
<h1>Maintainers for set <span class="set-name"><%= @post_set.name %></span></h1>
<p>Maintainers are users who are assigned to a set and have the ability to add or remove posts from it. They cannot
  edit any other details of the set.</p>

<% if @post_set.can_edit_settings?(CurrentUser) %>
  <% if @post_set.is_public %>
  <h3 style="margin-top:15px;">Add new Maintainer</h3>
  <div class='section' style="width:380px;">
    <%= form_tag(post_set_maintainers_path) do %>
      <label for="set_maintainer_name">Username</label><br/>
      <%= hidden_field_tag("post_set_id", @post_set.id) %>
      <%= text_field_tag("username", nil, data: { autocomplete: "user" })  %>
      <%= submit_tag("Invite") %>
    <% end %>
  </div>
  <% else %>
    <p>Post set must be public to add maintainers.</p>
  <% end %>
<% end %>

<%= table_for(@maintainers.where(status: %w[pending approved]).order(updated_at: :desc)) do |t| %>
  <% t.column("Username") do |maintainer| %>
    <%= link_to_user(maintainer.user) %>
  <% end %>
  <% t.column("Status") do |maintainer| %>
    <%= maintainer.status.capitalize %>
  <% end %>
  <% t.column("Date") do |maintainer| %>
    <%= compact_time(maintainer.updated_at) %>
  <% end %>
  <% t.column do |maintainer| %>
    <% if @post_set.can_edit_settings?(CurrentUser) && maintainer.status == "approved" %>
      <%= link_to("Remove", post_set_maintainer_path(maintainer), method: :delete, data: { confirm: "Are you sure you want to remove this maintainer?" }) %>
    <% end %>
    <% if @post_set.can_edit_settings?(CurrentUser) && maintainer.status == "pending" %>
      <%= link_to("Remove", post_set_maintainer_path(maintainer), method: :delete, data: { confirm: "Are you sure you want to remove this pending invite?" }) %>
    <% end %>
  <% end %>
<% end %>

<%= render(partial: "secondary_links") %>

<% content_for(:page_title) do %>
  Set Maintainers - <%= @post_set.name %>
<% end %>
