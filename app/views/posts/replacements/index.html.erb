<h1>Post Replacements</h1>

<%= render("search") %>
<%= render("posts/partials/common/inline_blacklist") %>

<%= table_for(@post_replacements, class: "striped autofit", style: "max-width: 100%") do |t| %>
  <% t.column("post", width: "1%") do |post_replacement| %>
    <%= PostPresenter.preview(post_replacement.post, show_deleted: true) %>
  <% end %>
  <% t.column("replacement", width: "1%") do |post_replacement| %>
    <%= replacement_thumbnail(post_replacement) %>
  <% end %>
  <% t.column do |post_replacement| %>
    <div class="replacement-details-row">
      <dl>
        <dt>Replacement Source</dt>
        <dd>
          <% if post_replacement.source.present? %>
            <ul>
              <% post_replacement.source_list.each do |source| %>
                <li><%= external_link_to(source, truncate: 64) %></li>
              <% end %>
            </ul>
          <% else %>
            <em>None provided</em>
          <% end %>
        </dd>
      </dl>
    </div>
    <div class="replacement-details-row">
      <% if post_replacement.file_name.present? %>
        <dl>
          <dt>Filename</dt>
          <dd><%= truncate(post_replacement.file_name, length: 64) %></dd>
        </dl>
      <% end %>
      <dl>
        <dt>Sequence</dt>
        <dd><%= post_replacement.post_id %>:<%= post_replacement.sequence %></dd>
      </dl>
    </div>
    <div class="replacement-details-row">
      <dl>
        <% if post_replacement.details %>
          <dt><%= post_replacement.show_current? ? "Current" : "Previous" %> MD5</dt>
          <dd><%= post_replacement.details[:md5] %></dd>
        <% end %>
      </dl>
      <dl>
        <% if post_replacement.md5.present? %>
          <dt>Replacement MD5</dt>
          <dd><%= post_replacement.md5 %></dd>
        <% end %>
      </dl>
    </div>
    <div class="replacement-details-row">
      <dl>
        <% if post_replacement.details %>
          <dt><%= post_replacement.show_current? ? "Current" : "Previous" %> Size</dt>
          <dd>
            <%= post_replacement.details[:width] %>x<%= post_replacement.details[:height] %>
            (<%= post_replacement.details[:size].to_fs(:human_size, precision: 5) %>, <%= post_replacement.details[:ext] %>)
          </dd>
        <% end %>
      </dl>
      <dl>
        <% if %i[image_width image_height file_size file_ext].all? { |k| post_replacement.public_send(k).present? } %>
          <dt>Replacement Size</dt>
          <dd>
            <%= post_replacement.image_width %>x<%= post_replacement.image_height %>
            (<%= post_replacement.file_size.to_fs(:human_size, precision: 5) %>, <%= post_replacement.file_ext %>)
          </dd>
        <% end %>
      </dl>
    </div>
  <% end %>
  <% t.column do |post_replacement| %>
    <dl>
      <dt>Status</dt>
      <dd><div class="replacement-status">
        <%= post_replacement.status %>
        <% if post_replacement.pending? && post_replacement.post.tag_array.intersect?(PostReplacement::HIGHLIGHTED_TAGS) %>
          <%= tag.i(class: "fa-solid fa-circle-exclamation", title: (post_replacement.post.tag_array & PostReplacement::HIGHLIGHTED_TAGS).join(", ")) %>
        <% end %>
        <% if post_replacement.media_asset.failed? %>
          <p><%= post_replacement.media_asset.pretty_status %></p>
        <% end %>
      </div></dd>
      <% if post_replacement.approved? %>
        <dt>Original Uploader</dt>
        <dd>
          <%= link_to_user(post_replacement.uploader_on_approve) %>
          <% if CurrentUser.can_approve_posts? %>
            | penalized: <span class="penalized-status"><%= post_replacement.penalize_uploader_on_approve? ? "yes" : "no" %></span>
          <% end %>
          <%= link_to_if(policy(post_replacement).toggle_penalize?, "toggle", "#toggle", class: "replacement-toggle-penalize-action", data: { replacement_id: post_replacement.id }) { "" } %><br>
        </dd>
        <dt>Approver</dt>
        <dd><%= link_to_user(post_replacement.approver) %></dd>
      <% elsif post_replacement.rejected? %>
        <dt>Rejector</dt>
        <dd><%= link_to_user(post_replacement.rejector) %></dd>
        <dt>Rejecton Reason</dt>
        <dd><%= post_replacement.rejection_reason || "None Provided" %></dd>
      <% elsif post_replacement.pending? %>
        <dt>Current Uploader</dt>
        <dd>
          <%= link_to_user(post_replacement.post.uploader) %>
        </dd>
      <% end %>
      <dt>Replacer</dt>
      <dd>
        <%= compact_time(post_replacement.created_at) %>
        <br> by <%= link_to_user(post_replacement.creator) %>
        <%= link_to("Â»", post_replacements_path(search: params[:search].permit!.merge(creator_name: post_replacement.creator.name))) %>
      </dd>
      <dt>Reason</dt>
      <dd>
        <div class="replacement-reason"><%= post_replacement.reason.presence || "None provided" %></div>
      </dd>
    </dl>
  <% end %>
  <% t.column do |post_replacement| %>
    <% if CurrentUser.user.can_approve_posts? %>
      <div class="pending-links">
        <% case post_replacement.status %>
        <% when "pending" %>
          <%= link_to("Approve", "#approve", class: "replacement-approve-action", data: { replacement_id: post_replacement.id, penalize: post_replacement.post.uploader != post_replacement.creator }) %><br>
          <br>
          <%= link_to("Reject", "#reject", class: "replacement-reject-action", data: { replacement_id: post_replacement.id }) %><br>
          <%= link_to("Reject With Reason", reject_with_reason_post_replacement_path(post_replacement), class: "replacement-reject-with-reason-action") %><br>
          <%= link_to("As New Post", "#promote", class: "replacement-promote-action", data: { replacement_id: post_replacement.id }) %><br>
        <% when "original" %>
          <%= link_to("Reset To", "#approve", class: "replacement-approve-action", data: { replacement_id: post_replacement.id, penalize: false }) %><br>
        <% when "rejected" %>
          <%= link_to("Approve", "#approve", class: "replacement-approve-action", data: { replacement_id: post_replacement.id, penalize: post_replacement.post.uploader != post_replacement.creator }) %><br>
        <% end %>
      </div>
    <% end %>
    <%= link_to_if(policy(post_replacement).destroy?, "Destroy", post_replacement_path(post_replacement), "method": :delete, "data-confirm": "Are you sure you want to destroy this replacement?") { "" } %>
  <% end %>
<% end %>

<%= numbered_paginator(@post_replacements) %>

<%= render("secondary_links") %>

<% content_for(:page_title) do %>
  Post Replacements
<% end %>
