<% if (comment.visible_to?(CurrentUser.user) && comment.should_see?(CurrentUser.user)) || (params[:controller] == "comments" && params[:action] == "show" && CurrentUser.user.id == comment.creator_id) %>
  <article
    class="comment <%= "below-threshold" if comment.below_threshold?(CurrentUser.user) %>"
    id="comment-<%= comment.id %>"
    data-post-id="<%= comment.post_id %>"
    data-comment-id="<%= comment.id %>"
    data-score="<%= comment.score %>"
    data-creator="<%= comment.creator&.name&.downcase %>"
    data-is-sticky="<%= comment.is_sticky %>"
    data-creator-id="<%= comment.creator_id %>"
    data-is-deleted="<%= comment.is_hidden? %>"
    data-is-spam="<%= comment.is_spam? %>"
  >

    <div class="comment-avatar">
      <%= comment_avatar(comment.creator) %>
      <%= comment_level_string(comment.creator) %>
    </div>

    <div class="comment-info">
      <div class="comment-info-left">
      <span class="comment-said">
        <%= link_to_user(comment.creator) %> said <%= link_to(time_ago_in_words_tagged(comment.created_at), post_path(id: comment.post_id, anchor: "comment-#{comment.id}")) %>
      </span>
        <%= comment_edited_notice(comment) %>
      </div>

      <div class="comment-info-right">
        <% if policy(comment).can_see_ip_addr? %>
          <li><%= link_to_ip(comment.creator_ip_addr) %></li>
        <% end %>
        <% if comment.is_spam? %>
          <% if policy(comment).can_see_ip_addr? %>
            <li class="dot"></li>
          <% end %>
          <li>
            <% if comment.spam_ticket.present? %>
              <% sign = '<i class="spam-comment fa-solid fa-triangle-exclamation" title="This comment has been detected as potential spam."></i>'.html_safe %>
              <% if CurrentUser.user.is_moderator? %>
                <%= link_to(sign, ticket_path(comment.spam_ticket)) %>
              <% else %>
                <%= sign %>
              <% end %>
            <% else %>
              <i class="spam-comment fa-solid fa-triangle-exclamation" title="This comment has been marked as spam."></i>
            <% end %>
          </li>
          <% if policy(comment).mark_not_spam? %>
            <li class="dot"></li>
            <li><%= link_to("Mark Not Spam", "", class: "comment-mark-not-spam-link item-mark-not-spam", data: { "item-route": "comments", "item-id": comment.id }) %></li>
          <% end %>
        <% elsif policy(comment).mark_spam? %>
          <li class="dot"></li>
          <li><%= link_to("Mark Spam", "", class: "comment-mark-spam-link item-mark-spam", data: { "item-route": "comments", "item-id": comment.id }) %></li>
        <% end %>
      </div>
    </div>

    <div class="comment-body dtext-container">
      <%= format_text(comment.body, allow_color: CurrentUser.user.id == comment.creator_id || (CurrentUser.user.is_anonymous? || !CurrentUser.disable_colors?)) %>
      <%= render("application/warned_notice", record: comment) %>
    </div>

    <% if policy(comment).update? %>
    <div class="comment-edit">
      <%= render("comments/partials/form", comment: comment) %>
    </div>
    <% end %>

    <div class="comment-acts">
      <%= comment_vote_block(comment, @comment_votes[comment.id]) %>

      <% if defined?(post) && comment.can_reply?(CurrentUser.user) %>
        <li>
          <%= tag.a(href: (CurrentUser.user.is_member? ? nil : new_session_path), class: "comment-reply-link") do %>
            <%= tag.i(class: "fa-solid fa-reply") %> Reply
          <% end %>
        </li>
      <% end %>

      <% if policy(comment).any?(:edit?, :hide?, :unhide?) %>
        <li class="dot"></li>
      <% end %>

      <%= li_link_to_if(policy(comment).edit?, "Edit", edit_comment_path(comment.id), class: "comment-edit-link") %>
      <%= li_link_to_if(policy(comment).hide?, "Delete", "", class: "comment-delete-link") %>
      <%= li_link_to_if(policy(comment).unhide?, "Undelete", "", class: "comment-undelete-link") %>

      <li class="spacer"></li>

      <%= li_link_to_if(mark = policy(comment).warning?, "Mark", "", class: "comment-mark-link") %>
      <%= li_link_to_if(history = policy(EditHistory).index?, "History", comment_edits_path(comment), class: "comment-edit-history-link") %>
      <%= li_link_to_if(vote = CommentVotePolicy.new(CurrentUser.user, comment).index?, "Votes", { controller: "comments/votes", search: { comment_id: comment.id } }, class: "comment-vote-history-link") %>
      <% if mark || history || vote %>
        <li class="dot"></li>
      <% end %>
      <%= li_link_to_if(policy(comment).destroy?, "Destroy", "", class: "comment-destroy-link") %>

      <% unless comment.is_sticky && TicketPolicy.new(CurrentUser.user, comment).create? %>
        <li>
          <%= link_to(model_new_ticket_path(model: comment), class: "comment-report-link") do %>
            <%= tag.i(class: "far fa-flag fa-flip-horizontal") %> Report
          <% end %>
        </li>
      <% end %>
    </div>

    <% if policy(comment).warning? %>
      <div class="comment-mark">
        <%= render("user_warnable/buttons", model: comment) %>
      </div>
    <% end %>

  </article>
<% end %>
